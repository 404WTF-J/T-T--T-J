{"version":3,"file":"js/388.20fcaeeb.js","mappings":"mIAAO,MAAMA,EAAO,y8C,4NCmDdC,EACJ,6I,iCANF,MAAMC,GAASC,EAAAA,EAAAA,MAGTC,EAAYJ,EAAAA,EACZK,GAAWC,EAAAA,EAAAA,IAAI,MAGfC,GAAaD,EAAAA,EAAAA,IAAI,MACjBE,GAAcF,EAAAA,EAAAA,IAAI,MAClBG,GAASH,EAAAA,EAAAA,IAAI,IAInB,SAASI,EAAYN,GACnB,MAAMO,EAAQP,EAAUQ,MAAM,MACxBC,EAAS,GACf,IAAK,MAAMC,KAAQH,EAAO,CACxB,MAAMI,EAAQD,EAAKF,MAAM,KACzB,GAAIG,EAAMC,OAAS,EAAG,SACtB,MAAMC,EAAUF,EAAM,GAAGG,UAAU,GAC7BC,EAAOJ,EAAM,GAAGK,OAChBC,EAAQC,EAAUL,GACxBJ,EAAOU,KAAK,CAAEF,QAAOF,QACvB,CACA,OAAON,CACT,CAGA,SAASS,EAAUL,GACjB,MAAOO,EAAKC,GAAOR,EAAQL,MAAM,KACjC,OAAuB,GAAhBc,SAASF,GAAYG,WAAWF,EACzC,CAEA,MAAMG,GAASC,EAAAA,EAAAA,IAASnB,EAAYN,IAC9B0B,GAAexB,EAAAA,EAAAA,IAAI,GACnByB,GAASzB,EAAAA,EAAAA,IAAI,GAEnB,SAAS0B,IACP,IAAK3B,EAAS4B,MAAO,OACrB,MAAMC,EAAc7B,EAAS4B,MAAMC,YAGnC,IAAIC,EAAI,EACR,KAAOA,EAAIP,EAAOZ,OAAQmB,IACxB,GAAID,EAAcN,EAAOO,GAAGd,MAAO,CACjCc,GAAQ,EACR,KACF,CAEEA,EAAI,IAAGA,EAAI,GACXA,GAAKP,EAAOZ,SAAQmB,EAAIP,EAAOZ,OAAS,GAC5Cc,EAAaG,MAAQE,GAGrBC,EAAAA,EAAAA,KAAS,KACP,IAAK7B,EAAW0B,QAAUzB,EAAYyB,MAAO,OAC7C,MAAMI,EAAgB9B,EAAW0B,MAAMK,aACjCC,EAAW9B,EAAOwB,MAAM,IAAIK,cAAgB,EAC5CE,EAAYhC,EAAYyB,MAAMQ,aAAeJ,EAWnD,IAAIK,EAAYH,EAAWJ,EAAIE,EAAgB,EAAIE,EAAW,EAC1DG,EAAY,IAAGA,EAAY,GAC3BA,EAAYF,IAAWE,EAAYF,GAEvCT,EAAOE,MAAQS,CAAS,GAE5B,CAQA,SAASC,EAAUC,GACbA,GAAInC,EAAOwB,MAAMV,KAAKqB,EAC5B,CARAZ,IACAa,YAAW,KACTxC,EAAS4B,MAAMa,MAAM,GACpB,KAOH,MAAMC,EAAUA,KAEd1C,EAAS4B,MAAMe,QAEf9C,EAAOqB,KAAK,eAAe,E,OAG7B0B,EAAAA,EAAAA,KAAU,KAGRxC,EAAOwB,MAAQ,EAAE,I,00BC1InB,MAAMiB,EAAc,EAEpB,O","sources":["webpack://tt/./src/assets/lsc/data.js","webpack://tt/./src/views/Spmusic/Spmusic.vue","webpack://tt/./src/views/Spmusic/Spmusic.vue?63b9"],"sourcesContent":["export const geci = `[00:00.06]特别的人 - 方大同\n[00:01.11]词：方大同\n[00:01.75]曲：方大同\n[00:02.4]编曲：方大同\n[00:03.2]制作人：方大同/Derrick Sepnio\n[00:04.4]录制:Lightroom Studio\n[00:05.09]工程师:Derrick Sepnio\n[00:05.92]混音师:Phil Tan\n[00:06.75]混音助理工程师:Daniela Rivera\n[00:08.06]弦乐编曲:The Benjamin Wright \"String\" Orchestra\n[00:09.31]弦乐总监:Marc Cargill\n[00:10.42]弦乐录制:Ritesonian Studio (工程师Reggie Dozie)\n[00:11.92]鼓和钢琴:Soulboy\n[00:12.87]电贝斯:Ray Vaughn Covington\n[00:14.03]额外编程:Derrick Sepnio\n[00:15.0]数字编辑:Derrick Sepnio\n[00:15.47]爱一个人或许要慷慨\n[00:20.53]若只想要被爱\n[00:22.82]最后没有了对白\n[00:27.1]必须有你我的情真\n[00:31.96]不求计分的平等\n[00:34.77]总有幸福有心疼\n[00:38.16]生命的起伏要认可\n[00:42.88]懂一个人也许要忍耐\n[00:47.97]要经过了意外\n[00:50.18]才了解所谓的爱\n[00:54.55]今后的岁月\n[00:57.02]让我们一起了解\n[01:00.46]多少天长地久\n[01:03.45]有几回细水长流\n[01:08.26]我们是对方 特别的人\n[01:15.44]奋不顾身 难舍难分\n[01:18.93]不是一般人的认真\n[01:22.33]若只有一天 爱一个人\n[01:29.13]让那时间每一刻在倒退\n[01:33.4]生命中有万事的可能\n[01:38.509995]你就是我要遇见的 特别的人\n[01:48.04]懂一个人也许要忍耐\n[01:53.03]要经过了意外\n[01:55.34]才了解所谓的爱\n[01:59.65]今后的岁月\n[02:02.18]让我们一起了解\n[02:05.65]多少天长地久\n[02:08.56]有几回细水长流\n[02:13.42]我们是对方 特别的人\n[02:20.58]奋不顾身 难舍难分\n[02:24.02]不是一般人的认真\n[02:27.42]若只有一天 爱一个人\n[02:34.12]让那时间每一刻在倒退\n[02:38.48]生命中有万事的可能\n[02:43.68]你就是我要遇见的 特别的人\n[02:50.61]有时候我们都会寂寞\n[02:54.9]有时也会失败 怕被淘汰\n[02:59.13]想去找一个明白\n[03:02.33]而我曾经多次的等待未来\n[03:08.78]你何时会来\n[03:11.02]人山人海 总有你的存在\n[03:16.36]有你我的爱\n[03:18.75]我们是对方 特别的人\n[03:25.73]奋不顾身 难舍难分\n[03:29.22]不是一般人的认真\n[03:32.6]若只有一天 爱一个人\n[03:39.43]让那时间每一刻在倒退\n[03:43.66]生命中有万事的可能\n[03:48.78]你就是我要遇见的 特别的人`;\n","<template>\n  <div class=\"Spmusic\">\n    <div class=\"musicbigBox\" id=\"musicbigBox\">\n      <div class=\"backbtn\" id=\"backBtn\" @click=\"backBtn\">下次在听</div>\n      <div class=\"coverimgbox\">\n        <img\n          src=\"https://raw.githubusercontent.com/404WTF-J/TestLink/9cc8a4f85063c6f00317737986c0b390c4c2e8a1/Luckyfile/asseset/img/R.jpg\"\n        />\n      </div>\n\n      <div class=\"musiclsctBox\">\n        <audio\n          ref=\"audioRef\"\n          :src=\"audioSrc\"\n          type=\"audio/mpeg\"\n          loop\n          controls\n          @timeupdate=\"onTimeUpdate\"\n          class=\"audio\"\n        ></audio>\n        <div class=\"poemBox2\" ref=\"poemBoxRef\">\n          <ul\n            class=\"poemList2\"\n            ref=\"poemListRef\"\n            :style=\"{ transform: `translateY(${-offset}px)` }\"\n          >\n            <li\n              :ref=\"(el) => setLiRefs(el, index)\"\n              v-for=\"(line, index) in lyrics\"\n              :key=\"index\"\n              :class=\"{ active: index === currentIndex }\"\n            >\n              {{ line.text }}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, computed, onMounted, nextTick } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { geci } from \"@/assets/lsc/data.js\";\n\nconst router = useRouter();\n\n//歌词的展示\nconst rawLyrics = geci;\nconst audioRef = ref(null);\nconst audioSrc =\n  \"https://raw.githubusercontent.com/404WTF-J/TestLink/9cc8a4f85063c6f00317737986c0b390c4c2e8a1/Luckyfile/asseset/video/Special%20someone.mp3\";\nconst poemBoxRef = ref(null);\nconst poemListRef = ref(null);\nconst liRefs = ref([]); // 存储每个li元素的引用\n// console.log(rawLyrics, \"rawLyrics138\");\n\n// 解析歌词文本，返回数组 [{times: 秒数, text: 歌词}]\nfunction parseLyrics(rawLyrics) {\n  const lines = rawLyrics.split(\"\\n\");\n  const result = [];\n  for (const line of lines) {\n    const parts = line.split(\"]\");\n    if (parts.length < 2) continue;\n    const timeStr = parts[0].substring(1);\n    const text = parts[1].trim();\n    const times = parseTime(timeStr);\n    result.push({ times, text });\n  }\n  return result;\n}\n\n// 时间字符串转秒数，支持 mm:ss.xx 格式\nfunction parseTime(timeStr) {\n  const [min, sec] = timeStr.split(\":\");\n  return parseInt(min) * 60 + parseFloat(sec);\n}\n\nconst lyrics = reactive(parseLyrics(rawLyrics));\nconst currentIndex = ref(0);\nconst offset = ref(0);\n\nfunction onTimeUpdate() {\n  if (!audioRef.value) return;\n  const currentTime = audioRef.value.currentTime;\n\n  // 找到当前歌词索引\n  let i = 0;\n  for (; i < lyrics.length; i++) {\n    if (currentTime < lyrics[i].times) {\n      i = i - 1;\n      break;\n    }\n  }\n  if (i < 0) i = 0;\n  if (i >= lyrics.length) i = lyrics.length - 1;\n  currentIndex.value = i;\n\n  // 计算滚动偏移\n  nextTick(() => {\n    if (!poemBoxRef.value || !poemListRef.value) return;\n    const poemBoxHeight = poemBoxRef.value.clientHeight;\n    const liHeight = liRefs.value[0]?.clientHeight || 0;\n    const maxOffset = poemListRef.value.scrollHeight - poemBoxHeight;\n    // console.log(\n    //   liHeight,\n    //   \"liHeight\",\n    //   poemBoxHeight,\n    //   \"poemBoxHeight\",\n    //   maxOffset,\n    //   \"maxOffset\",\n    //   \"879\"\n    // );\n\n    let newOffset = liHeight * i - poemBoxHeight / 2 + liHeight / 2;\n    if (newOffset < 0) newOffset = 0;\n    if (newOffset > maxOffset) newOffset = maxOffset;\n\n    offset.value = newOffset;\n  });\n}\n\nonTimeUpdate();\nsetTimeout(() => {\n  audioRef.value.play();\n}, 1000);\n\n// 用于收集li元素的引用\nfunction setLiRefs(el) {\n  if (el) liRefs.value.push(el);\n}\n// 返回按钮\nconst backBtn = () => {\n  //暂停音乐\n  audioRef.value.pause();\n  // 跳转路由\n  router.push(\"/mainContent\");\n};\n\nonMounted(() => {\n  // 生命周期钩子\n  // 组件挂载后清空liRefs，防止重复\n  liRefs.value = [];\n});\n</script>\n\n<style>\n/* 单独歌曲页面 */\n.musicbigBox {\n  width: 100%;\n  height: 100%;\n  background-image: linear-gradient(200deg, #7a8a99, #000);\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 999;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n}\n\n.backbtn {\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  width: 100px;\n  opacity: 0.3;\n  transition: 0.5s;\n}\n\n.backbtn:hover {\n  opacity: 1;\n}\n\n/* 滚动歌词样式 */\n.poemBox2 {\n  width: 340px;\n  height: 400px;\n  /* border: 1px solid #b73838; */\n  margin: 40px auto;\n  overflow: hidden;\n  position: relative;\n}\n.poemList2 {\n  overflow: hidden;\n  transition: all 1s ease-in-out;\n  font-size: 14px;\n}\n.poemList2 li {\n  /* font-size: large 会导致重新reflow布局  */\n  transform: scale(1.2);\n  color: #8d8a8a;\n  height: 38px;\n  line-height: 38px;\n  transition: 1s;\n}\n.poemList2 li.active {\n  color: #fff;\n  transform: scale(1.4);\n}\n\n/* 播放器 */\n.musicplayer {\n  width: 340px;\n  height: 440px;\n  text-align: center;\n  /* border: 1px solid #b73838; */\n  margin: 0 auto;\n  overflow: hidden;\n}\n\n.coverimgbox {\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n  overflow: hidden;\n  margin: 30px auto;\n}\n\n.coverimgbox img {\n  width: 100%;\n  height: 100%;\n}\n\n.musiclsctBox {\n  width: 340px;\n  height: 440px;\n  text-align: center;\n  /* border: 1px solid #b73838; */\n  margin: 0 auto;\n  overflow: hidden;\n  position: relative;\n}\n</style>\n","import script from \"./Spmusic.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Spmusic.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Spmusic.vue?vue&type=style&index=0&id=2e65c5d4&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["geci","audioSrc","router","useRouter","rawLyrics","audioRef","ref","poemBoxRef","poemListRef","liRefs","parseLyrics","lines","split","result","line","parts","length","timeStr","substring","text","trim","times","parseTime","push","min","sec","parseInt","parseFloat","lyrics","reactive","currentIndex","offset","onTimeUpdate","value","currentTime","i","nextTick","poemBoxHeight","clientHeight","liHeight","maxOffset","scrollHeight","newOffset","setLiRefs","el","setTimeout","play","backBtn","pause","onMounted","__exports__"],"sourceRoot":""}